<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 1.配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 配置使用的自定义Realm -->
        <property name="realm" ref="myUserRealm"></property>
        <!-- 会话管理 -->
        <property name="sessionManager" ref="sessionManager"></property>
    </bean>

    <!-- 2. 配置自定义Realm -->
    <bean id="myUserRealm" class="com.qf.shiro.AdminAuthorizingRealm"></bean>

    <!-- 3. 自定义web会话管理器-->
    <!--============会话配置start==========-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionIdCookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <property name="name" value="mysessionId"></property>
                <!--sessionId的最大存在时间，以秒为单位-->
                <property name="maxAge" value="1800"></property>
            </bean>
        </property>
        <!--定时清除过期的会话-->
        <property name="sessionValidationSchedulerEnabled" value="true"></property>
        <!--全局会话过期时间, 30分钟 -->
        <property name="globalSessionTimeout" value="1800000"></property>
    </bean>
    <!--============会话配置end==========-->

    <!--处理shiro导致的跨域问题-->
    <bean id="autchFilter" class="com.qf.config.AutchFilter"></bean>

    <!-- 4. 配置shiro过滤器, 处理web.xml 拦截的请求 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 配置使用的权限管理器 -->
        <property name="securityManager" ref="securityManager"></property>
        <!-- 配置登录地址 -->
        <property name="loginUrl" value="/admin/auth/401"></property>
        <!-- 配置登录成功跳转的地址 -->
        <property name="successUrl" value="/admin/auth/index"/>

        <property name="filters">
            <map>
                <entry key="authc" value-ref="autchFilter"></entry>
            </map>
        </property>

        <!-- 配置过滤规则，从上到下的顺序匹配 -->
        <property name="filterChainDefinitions">
            <value>
                # 放行的地址
                /admin/auth/login = anon
                /admin/auth/captchaImage = anon
                /admin/auth/401 = anon
                /admin/auth/index = anon
                /admin/auth/403 = anon
                /admin/** = anon
                /swagger** = anon
                /admin/auth/logout = authc
                /admin/auth/info = authc
                /admin/dashboard/chart = authc
                /admin/role/options = authc
                # 其他请求必须登录后才能访问
                # /** = authc
            </value>
        </property>

    </bean>

</beans>